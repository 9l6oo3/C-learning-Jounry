// <auto-generated />
using System;
using ClinicRegistrationandManagementSystem.MyDbcontext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClinicRegistrationandManagementSystem.Migrations
{
    [DbContext(typeof(ApplictionDbContext))]
    partial class ApplictionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ClinicRegistrationandManagementSystem.Models.Appointment", b =>
                {
                    b.Property<int>("AppID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppID"), 1L, 1);

                    b.Property<DateTime>("AppDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<int>("SpecID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppID");

                    b.HasIndex("PatientID");

                    b.HasIndex("SpecID");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("ClinicRegistrationandManagementSystem.Models.Patient", b =>
                {
                    b.Property<int>("patientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("patientID"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<long>("PhoneNo")
                        .HasColumnType("bigint");

                    b.Property<string>("patientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("patientID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("ClinicRegistrationandManagementSystem.Models.Specialization", b =>
                {
                    b.Property<int>("SpecID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecID"), 1L, 1);

                    b.Property<string>("Discribtion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecID");

                    b.ToTable("Specializations");
                });

            modelBuilder.Entity("ClinicRegistrationandManagementSystem.Models.Appointment", b =>
                {
                    b.HasOne("ClinicRegistrationandManagementSystem.Models.Patient", "patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicRegistrationandManagementSystem.Models.Specialization", "Specialization")
                        .WithMany("Appointments")
                        .HasForeignKey("SpecID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialization");

                    b.Navigation("patient");
                });

            modelBuilder.Entity("ClinicRegistrationandManagementSystem.Models.Patient", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("ClinicRegistrationandManagementSystem.Models.Specialization", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
